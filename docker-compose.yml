version: '3.9'                                                                    # version of docker compose format document
x-server:
  &default-server                                                                 # anchor to reuse the definition of NodeJS server
  build:
      context: docker/node
      dockerfile: Dockerfile
  container_name: server
  ports:
    - "80:80"
    - "443:443"
  restart: on-failure
  depends_on:
    - db
  volumes:
    - ./backend:/app/backend                                                      # backend volume
    - ./data/certbot-webroot:/app/certbot-acme-challenge                               # backend volume
    - ./config:/app/config                                                        # backend config volume
    - ./notfound:/app/webroot/notfound                                            # notfound volume
    - ./backend-ui/dist/backend-ui:/app/webroot/backend-ui                        # backend-ui volume
    - ./frontend/build:/app/webroot/frontend                                      # frontend volume
    # DEV VOLUMES
    - ./backend-ui:/app/dev/webroot/backend-ui                                    # DEV backend-ui volume
    - ./frontend/:/app/dev/webroot/frontend                                       # DEV frontend volume
  command: /app/backend/index
  env_file:
   - "docker/node/.env"
services:
  db:
    build:
        context: docker/mongo
        dockerfile: Dockerfile
    container_name: db
    ports:
     - "27017:27017"
    volumes:
     - ./data/mongo/db:/data/db                                                   # host folder to hold Mongo DB
     - ./config/mongodb/init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro      # MongoDB entrypoint run only once in installation time
    env_file:
     - "docker/mongo/.env"
    healthcheck:
      test: ["CMD-SHELL", "db.runCommand('ping').ok", "|", "mongo", "db:27017/onlinecv", "--quiet", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: on-failure
    secrets:
      - app_mongo_password
      - app_mongo_root_password
  server:
    << : *default-server                                                          # Default NODEJS Server definition
  server-brk:                                                                     # To be used in DEV ENV
    << : *default-server
    container_name: server-brk
    command: "exit"
    profiles:
      - dev
  certbot:
    build:
      context: docker/certbot
      dockerfile: Dockerfile
    container_name: certbot
    #ports:
    #  - "443:443"
    volumes:
      - ./data/certbot-webroot:/webroot
    #   - ./data/certs:/certs
    #   - ./data/letsencrypt:/etc/letsencrypt
    #   - ./data/var_log_letsencrypt:/var/log/letsencrypt
    #   - ./data/backend_static:/webroot
    restart: always
    command: tail -F anything
    depends_on:
      - server
  #   environment:
  #     - WEBROOT=/webroot
  #     - LOGFILE=/var/log/letsencrypt/certrenewal.log
  #     - DEBUG=false
  #     - STAGING=false
  #     - DOMAINS=manu.app
  #     - EMAIL=dev@manu.app
  #     - CONCAT=false
  #     - HEALTH_CHECK_URL=web:80
  #     - PREFERRED_CHALLENGES=http-01

#docker run -d --name mongo -p 27017:27017 -v /data/mongo/:/data/mongo mvertes/alpine-mongo
#docker run -d -p 80:80 -v /data:/data --name onlinecv onlinecv
secrets:
  app_mongo_password:
    file: ./config/mongodb/app_mongo_password.txt
  app_mongo_root_password:
    file: ./config/mongodb/app_mongo_root_password.txt